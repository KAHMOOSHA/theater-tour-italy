{"version":3,"file":"static/js/409.c0e0edad.chunk.js","mappings":"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","sources":["../node_modules/media-captions/dist/prod/ssa-parser.js"],"sourcesContent":["import { b as VTTCue, p as parseVTTTimestamp } from './index.js';\n\nconst FORMAT_START_RE = /^Format:[\\s\\t]*/, STYLE_START_RE = /^Style:[\\s\\t]*/, DIALOGUE_START_RE = /^Dialogue:[\\s\\t]*/, FORMAT_SPLIT_RE = /[\\s\\t]*,[\\s\\t]*/, STYLE_FUNCTION_RE = /\\{[^}]+\\}/g, NEW_LINE_RE = /\\\\N/g, STYLES_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Styles\\]$/, EVENTS_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Events\\]$/;\nclass SSAParser {\n  f;\n  O = 0;\n  a = null;\n  j = [];\n  k = [];\n  N = null;\n  d;\n  P = {};\n  async init(init) {\n    this.f = init;\n    if (init.errors)\n      this.d = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (this.O) {\n      switch (this.O) {\n        case 1:\n          if (line === \"\") {\n            this.O = 0;\n          } else if (STYLE_START_RE.test(line)) {\n            if (this.N) {\n              const styles = line.replace(STYLE_START_RE, \"\").split(FORMAT_SPLIT_RE);\n              this.S(styles);\n            } else {\n              this.e(this.d?.T(\"Style\", lineCount));\n            }\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 2;\n          }\n          break;\n        case 2:\n          if (line === \"\") {\n            this.Q();\n          } else if (DIALOGUE_START_RE.test(line)) {\n            this.Q();\n            if (this.N) {\n              const dialogue = line.replace(DIALOGUE_START_RE, \"\").split(FORMAT_SPLIT_RE), cue = this.U(dialogue, lineCount);\n              if (cue)\n                this.a = cue;\n            } else {\n              this.e(this.d?.T(\"Dialogue\", lineCount));\n            }\n          } else if (this.a) {\n            this.a.text += \"\\n\" + line.replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (STYLES_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 1;\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n          }\n      }\n    } else if (line === \"\") ; else if (STYLES_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 1;\n    } else if (EVENTS_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 2;\n    }\n  }\n  done() {\n    return {\n      metadata: {},\n      cues: this.j,\n      regions: [],\n      errors: this.k\n    };\n  }\n  Q() {\n    if (!this.a)\n      return;\n    this.j.push(this.a);\n    this.f.onCue?.(this.a);\n    this.a = null;\n  }\n  S(values) {\n    let name = \"Default\", styles = {}, outlineX, align = \"center\", vertical = \"bottom\", marginV, outlineY = 1.2, outlineColor, bgColor, borderStyle = 3, transform = [];\n    for (let i = 0; i < this.N.length; i++) {\n      const field = this.N[i], value = values[i];\n      switch (field) {\n        case \"Name\":\n          name = value;\n          break;\n        case \"Fontname\":\n          styles[\"font-family\"] = value;\n          break;\n        case \"Fontsize\":\n          styles[\"font-size\"] = `calc(${value} / var(--overlay-height))`;\n          break;\n        case \"PrimaryColour\":\n          const color = parseColor(value);\n          if (color)\n            styles[\"--cue-color\"] = color;\n          break;\n        case \"BorderStyle\":\n          borderStyle = parseInt(value, 10);\n          break;\n        case \"BackColour\":\n          bgColor = parseColor(value);\n          break;\n        case \"OutlineColour\":\n          const _outlineColor = parseColor(value);\n          if (_outlineColor)\n            outlineColor = _outlineColor;\n          break;\n        case \"Bold\":\n          if (parseInt(value))\n            styles[\"font-weight\"] = \"bold\";\n          break;\n        case \"Italic\":\n          if (parseInt(value))\n            styles[\"font-style\"] = \"italic\";\n          break;\n        case \"Underline\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"underline\";\n          break;\n        case \"StrikeOut\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"line-through\";\n          break;\n        case \"Spacing\":\n          styles[\"letter-spacing\"] = value + \"px\";\n          break;\n        case \"AlphaLevel\":\n          styles[\"opacity\"] = parseFloat(value);\n          break;\n        case \"ScaleX\":\n          transform.push(`scaleX(${parseFloat(value) / 100})`);\n          break;\n        case \"ScaleY\":\n          transform.push(`scaleY(${parseFloat(value) / 100})`);\n          break;\n        case \"Angle\":\n          transform.push(`rotate(${value}deg)`);\n          break;\n        case \"Shadow\":\n          outlineY = parseInt(value, 10) * 1.2;\n          break;\n        case \"MarginL\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-left\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginR\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-right\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginV\":\n          marginV = parseFloat(value);\n          break;\n        case \"Outline\":\n          outlineX = parseInt(value, 10);\n          break;\n        case \"Alignment\":\n          const alignment = parseInt(value, 10);\n          if (alignment >= 4)\n            vertical = alignment >= 7 ? \"top\" : \"center\";\n          switch (alignment % 3) {\n            case 1:\n              align = \"start\";\n              break;\n            case 2:\n              align = \"center\";\n              break;\n            case 3:\n              align = \"end\";\n              break;\n          }\n      }\n    }\n    styles.R = vertical;\n    styles[\"--cue-white-space\"] = \"normal\";\n    styles[\"--cue-line-height\"] = \"normal\";\n    styles[\"--cue-text-align\"] = align;\n    if (vertical === \"center\") {\n      styles[`--cue-top`] = \"50%\";\n      transform.push(\"translateY(-50%)\");\n    } else {\n      styles[`--cue-${vertical}`] = (marginV || 0) + \"px\";\n    }\n    if (borderStyle === 1) {\n      styles[\"--cue-padding-y\"] = \"0\";\n    }\n    if (borderStyle === 1 || bgColor) {\n      styles[\"--cue-bg-color\"] = borderStyle === 1 ? \"none\" : bgColor;\n    }\n    if (borderStyle === 3 && outlineColor) {\n      styles[\"--cue-outline\"] = `${outlineX}px solid ${outlineColor}`;\n    }\n    if (borderStyle === 1 && typeof outlineX === \"number\") {\n      const color = bgColor ?? \"#000\";\n      styles[\"--cue-text-shadow\"] = [\n        outlineColor && buildTextShadow(outlineX * 1.2, outlineY * 1.2, outlineColor),\n        outlineColor ? buildTextShadow(outlineX * (outlineX / 2), outlineY * (outlineX / 2), color) : buildTextShadow(outlineX, outlineY, color)\n      ].filter(Boolean).join(\", \");\n    }\n    if (transform.length)\n      styles[\"--cue-transform\"] = transform.join(\" \");\n    this.P[name] = styles;\n  }\n  U(values, lineCount) {\n    const fields = this.V(values);\n    const timestamp = this.o(fields.Start, fields.End, lineCount);\n    if (!timestamp)\n      return;\n    const cue = new VTTCue(timestamp[0], timestamp[1], \"\"), styles = { ...this.P[fields.Style] || {} }, voice = fields.Name ? `<v ${fields.Name}>` : \"\";\n    const vertical = styles.R, marginLeft = fields.MarginL && parseFloat(fields.MarginL), marginRight = fields.MarginR && parseFloat(fields.MarginR), marginV = fields.MarginV && parseFloat(fields.MarginV);\n    if (marginLeft) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-left\"] = marginLeft + \"px\";\n    }\n    if (marginRight) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-right\"] = marginRight + \"px\";\n    }\n    if (marginV && vertical !== \"center\") {\n      styles[`--cue-${vertical}`] = marginV + \"px\";\n    }\n    cue.text = voice + values.slice(this.N.length - 1).join(\", \").replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n    delete styles.R;\n    if (Object.keys(styles).length)\n      cue.style = styles;\n    return cue;\n  }\n  V(values) {\n    const fields = {};\n    for (let i = 0; i < this.N.length; i++) {\n      fields[this.N[i]] = values[i];\n    }\n    return fields;\n  }\n  o(startTimeText, endTimeText, lineCount) {\n    const startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime];\n    } else {\n      if (startTime === null) {\n        this.e(this.d?.q(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.e(this.d?.r(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.e(this.d?.s(startTime, endTime, lineCount));\n      }\n    }\n  }\n  e(error) {\n    if (!error)\n      return;\n    this.k.push(error);\n    if (this.f.strict) {\n      this.f.cancel();\n      throw error;\n    } else {\n      this.f.onError?.(error);\n    }\n  }\n}\nfunction parseColor(color) {\n  const abgr = parseInt(color.replace(\"&H\", \"\"), 16);\n  if (abgr >= 0) {\n    const a = abgr >> 24 & 255 ^ 255;\n    const alpha = a / 255;\n    const b = abgr >> 16 & 255;\n    const g = abgr >> 8 & 255;\n    const r = abgr & 255;\n    return \"rgba(\" + [r, g, b, alpha].join(\",\") + \")\";\n  }\n  return null;\n}\nfunction buildTextShadow(x, y, color) {\n  const noOfShadows = Math.ceil(2 * Math.PI * x);\n  let textShadow = \"\";\n  for (let i = 0; i < noOfShadows; i++) {\n    const theta = 2 * Math.PI * i / noOfShadows;\n    textShadow += x * Math.cos(theta) + \"px \" + y * Math.sin(theta) + \"px 0 \" + color + (i == noOfShadows - 1 ? \"\" : \",\");\n  }\n  return textShadow;\n}\nfunction createSSAParser() {\n  return new SSAParser();\n}\n\nexport { SSAParser, createSSAParser as default };\n"],"names":["FORMAT_START_RE","STYLE_START_RE","DIALOGUE_START_RE","FORMAT_SPLIT_RE","STYLE_FUNCTION_RE","NEW_LINE_RE","STYLES_SECTION_START_RE","EVENTS_SECTION_START_RE","SSAParser","_classCallCheck","_defineProperty","_createClass","key","value","_init2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","init","wrap","_context","prev","next","this","f","errors","d","sent","ParseErrorBuilder","stop","_x","apply","arguments","line","lineCount","O","test","N","styles","replace","split","S","_this$d","e","T","Q","dialogue","cue","U","a","_this$d2","text","metadata","cues","j","regions","k","_this$f$onCue","_this$f","push","onCue","call","values","outlineX","marginV","outlineColor","bgColor","name","align","vertical","outlineY","borderStyle","transform","i","length","field","concat","color","parseColor","parseInt","_outlineColor","parseFloat","alignment","R","_bgColor","buildTextShadow","filter","Boolean","join","P","fields","V","timestamp","o","Start","End","VTTCue","_objectSpread","Style","voice","Name","marginLeft","MarginL","marginRight","MarginR","MarginV","slice","Object","keys","style","startTimeText","endTimeText","_this$d3","_this$d4","_this$d5","startTime","parseVTTTimestamp","endTime","q","r","s","error","strict","cancel","_this$f$onError","_this$f2","onError","abgr","x","y","noOfShadows","Math","ceil","PI","textShadow","theta","cos","sin","createSSAParser"],"sourceRoot":""}